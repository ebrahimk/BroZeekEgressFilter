version: "3"

services:

  # Built with https://github.com/zeek/zeek-docker.git
  attacker_router:
    image: "broplatform/bro:3.0.0"
    cap_add:
      - ALL
    networks:
      attacker_net:
        ipv4_address: 172.20.2.3
      router_net:
        ipv4_address: 172.20.1.2
      elks:
    volumes:
      - ./zeek:/var/log/zeek_logs
    environment: 
      - THIS_SUBNET=172.20.2.0/24
    user: root
    command: bash -c "ip route add 172.20.3.0/24 via 172.20.1.3 && 
                      ip route add 172.20.4.0/24 via 172.20.1.4 &&
                      apt-get update &&
                      apt-get -y install net-tools &&
                      apt-get -y install tcpdump && 
                      apt-get -y install iptables &&  
                      cd /var/log/zeek_logs && 
                      zeek -i eth0 main.zeek"

  victim_router:
    image: "broplatform/bro:3.0.0"
    cap_add:
      - ALL
    networks:
      router_net: 
        ipv4_address: 172.20.1.3
      victim_net:
        ipv4_address: 172.20.3.3
      elks:
    volumes:
      - ./zeek/victim:/var/log/zeek_logs
    user: root
    command: bash -c "ip route add 172.20.2.0/24 via 172.20.1.2 && 
                      ip route add 172.20.4.0/24 via 172.20.1.4 && 
                      apt-get update &&
                      apt-get -y install net-tools &&
                      apt-get -y install tcpdump && 
                      apt-get -y install iptables &&  
                      cd /var/log/zeek_logs && 
                      zeek -i eth1 main.zeek"

  reflection_router:
    build:
      context: ./debian
      dockerfile: Dockerfile 
    cap_add:
      - ALL
    networks:
      router_net: 
        ipv4_address: 172.20.1.4
      reflection_net:
        ipv4_address: 172.20.4.3
    command: bash -c " ip route add 172.20.2.0/24 via 172.20.1.2 && 
                      ip route add 172.20.3.0/24 via 172.20.1.3 && 
                      tail -f /dev/null"

  # host containers
  attacker:
    build:
      context: ./debian
      dockerfile: Dockerfile 
    cap_add:
      - ALL
    depends_on:
      - victim
      - victim_router
      - attacker_router
    environment:
      - DEFAULT_IP=172.20.2.1
      - GATEWAY_IP=attacker_router     
    networks:
      - attacker_net
    stdin_open: true
    tty: true



  victim:
    build:
      context: ./debian
      dockerfile: Dockerfile 
    cap_add:
      - ALL
    environment:
      - DEFAULT_IP=172.20.3.1
      - GATEWAY_IP=victim_router 
    networks:
      victim_net:
        ipv4_address: 172.20.3.2
    stdin_open: true
    tty: true


  reflection:
    build:
      context: ./debian
      dockerfile: Dockerfile 
    depends_on:
      - reflection_router
    cap_add:
      - ALL
    environment:
      - DEFAULT_IP=172.20.4.1
      - GATEWAY_IP=reflection_router
    networks:
      - reflection_net
    stdin_open: true
    tty: true
    deploy:
      replicas: 4
      
networks:
  # WAN network
  router_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.1.0/24

  attacker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.2.0/24

  victim_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.3.0/24

  reflection_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.4.0/24

  elks:
      driver: bridge

# FOR openWRT containers command: ash -c "mkdir -p /var/lock && opkg update && opkg install uhttpd && opkg update && opkg install luci"
# Run  docker-compose --compatibility up 
