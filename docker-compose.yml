version: "3.8"

services:

  # router containers
  attacker_router:
    image: busybox 
    cap_add:
      - ALL
    networks:
      router_net:
        ipv4_address: 172.20.1.2
      attacker_net:
        ipv4_address: 172.20.2.3
    command: ash -c " ip route add 172.20.3.0/24 via 172.20.1.3 && 
                      ip route add 172.20.4.0/24 via 172.20.1.4 && 
                      tail -f /dev/null"

  victim_router:
    image: busybox
    cap_add:
      - ALL
    networks:
      router_net: 
        ipv4_address: 172.20.1.3
      victim_net:
        ipv4_address: 172.20.3.3
    command: ash -c " ip route add 172.20.2.0/24 via 172.20.1.2 && 
                      ip route add 172.20.4.0/24 via 172.20.1.4 && 
                      tail -f /dev/null"

  reflection_router:
    image: busybox
    cap_add:
      - ALL
    networks:
      router_net: 
        ipv4_address: 172.20.1.4
      reflection_net:
        ipv4_address: 172.20.4.3
    command: ash -c " ip route add 172.20.2.0/24 via 172.20.1.2 && 
                      ip route add 172.20.3.0/24 via 172.20.1.3 && 
                      tail -f /dev/null"

  # host containers
  attacker:
    build:
      context: ./busybox
      dockerfile: Dockerfile 
    cap_add:
      - ALL
    environment:
      - DEFAULT_IP=172.20.2.1
      - GATEWAY_IP=172.20.2.3
    networks:
      - attacker_net
    stdin_open: true
    tty: true

  victim:
    build:
      context: ./busybox
      dockerfile: Dockerfile 
    cap_add:
      - ALL
    environment:
      - DEFAULT_IP=172.20.3.1
      - GATEWAY_IP=172.20.3.3
    networks:
      - victim_net
    stdin_open: true
    tty: true

  reflection:
    build:
      context: ./busybox
      dockerfile: Dockerfile 
    depends_on:
      - reflection_router
    cap_add:
      - ALL
    environment:
      - DEFAULT_IP=172.20.4.1
      - GATEWAY_IP=172.20.4.3
    networks:
      - reflection_net
    stdin_open: true
    tty: true
    deploy:
      replicas: 4
  
networks:
  # WAN network
  router_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.1.0/24

  attacker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.2.0/24

  victim_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.3.0/24

  reflection_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.4.0/24

# FOR openWRT containers command: ash -c "mkdir -p /var/lock && opkg update && opkg install uhttpd && opkg update && opkg install luci"
# Run  docker-compose --compatibility up 